{"version":3,"sources":["IceStorm.js"],"names":["root","window","global","self","IceStorm","Slice","Ice","iceC_IceMX_TopicMetrics_ids","IceMX","TopicMetrics","id","total","current","totalLifetime","failures","published","Long","forwarded","ostr","writeLong","istr","readLong","Metrics","defineValue","TopicMetricsDisp","MetricsDisp","defineOperations","undefined","iceC_IceMX_SubscriberMetrics_ids","SubscriberMetrics","queued","outstanding","delivered","writeInt","readInt","SubscriberMetricsDisp","LinkInfo","theTopic","name","cost","TopicPrx","write","writeString","read","readString","defineStruct","defineSequence","defineDictionary","LinkExists","_cause","UserException","NoSuchLink","AlreadySubscribed","InvalidSubscriber","reason","BadQoS","iceC_IceStorm_Topic_ids","Topic","Object","ObjectPrx","TopicExists","NoSuchTopic","iceC_IceStorm_TopicManager_ids","TopicManager","TopicManagerPrx","iceC_IceStorm_Finder_ids","Finder","FinderPrx"],"mappings":"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","file":"IceStorm.js","sourcesContent":["(function()\n{\n    var root = typeof(window) !== \"undefined\" ? window : typeof(global) !== \"undefined\" ? global : typeof(self) !== \"undefined\" ? self : {};\n    root.IceStorm = root.IceStorm || {};\n    var Slice = Ice.Slice;\n\n    (function()\n    {\n        // **********************************************************************\n        //\n        // Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.\n        //\n        // This copy of Ice is licensed to you under the terms described in the\n        // ICE_LICENSE file included in this distribution.\n        //\n        // **********************************************************************\n        //\n        // Ice version 3.7.0\n        //\n        // <auto-generated>\n        //\n        // Generated from file `Metrics.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        \n            const iceC_IceMX_TopicMetrics_ids = [\n                \"::Ice::Object\",\n                \"::IceMX::Metrics\",\n                \"::IceMX::TopicMetrics\"\n            ];\n        \n            /**\n             * Provides information on IceStorm topics.\n             *\n             **/\n            IceMX.TopicMetrics = class extends IceMX.Metrics\n            {\n                constructor(id, total, current, totalLifetime, failures, published = new Ice.Long(0, 0), forwarded = new Ice.Long(0, 0))\n                {\n                    super(id, total, current, totalLifetime, failures);\n                    this.published = published;\n                    this.forwarded = forwarded;\n                }\n        \n                _iceWriteMemberImpl(ostr)\n                {\n                    ostr.writeLong(this.published);\n                    ostr.writeLong(this.forwarded);\n                }\n        \n                _iceReadMemberImpl(istr)\n                {\n                    this.published = istr.readLong();\n                    this.forwarded = istr.readLong();\n                }\n            };\n        \n            Slice.defineValue(IceMX.TopicMetrics, iceC_IceMX_TopicMetrics_ids[2], false);\n        \n            /**\n             * Provides information on IceStorm topics.\n             *\n             **/\n            IceMX.TopicMetricsDisp = class extends IceMX.MetricsDisp\n            {\n            };\n        \n            Slice.defineOperations(IceMX.TopicMetricsDisp, undefined, iceC_IceMX_TopicMetrics_ids, 2);\n        \n            const iceC_IceMX_SubscriberMetrics_ids = [\n                \"::Ice::Object\",\n                \"::IceMX::Metrics\",\n                \"::IceMX::SubscriberMetrics\"\n            ];\n        \n            /**\n             * Provides information on IceStorm subscribers.\n             *\n             **/\n            IceMX.SubscriberMetrics = class extends IceMX.Metrics\n            {\n                constructor(id, total, current, totalLifetime, failures, queued = 0, outstanding = 0, delivered = new Ice.Long(0, 0))\n                {\n                    super(id, total, current, totalLifetime, failures);\n                    this.queued = queued;\n                    this.outstanding = outstanding;\n                    this.delivered = delivered;\n                }\n        \n                _iceWriteMemberImpl(ostr)\n                {\n                    ostr.writeInt(this.queued);\n                    ostr.writeInt(this.outstanding);\n                    ostr.writeLong(this.delivered);\n                }\n        \n                _iceReadMemberImpl(istr)\n                {\n                    this.queued = istr.readInt();\n                    this.outstanding = istr.readInt();\n                    this.delivered = istr.readLong();\n                }\n            };\n        \n            Slice.defineValue(IceMX.SubscriberMetrics, iceC_IceMX_SubscriberMetrics_ids[2], false);\n        \n            /**\n             * Provides information on IceStorm subscribers.\n             *\n             **/\n            IceMX.SubscriberMetricsDisp = class extends IceMX.MetricsDisp\n            {\n            };\n        \n            Slice.defineOperations(IceMX.SubscriberMetricsDisp, undefined, iceC_IceMX_SubscriberMetrics_ids, 2);\n        \n    }());\n\n    (function()\n    {\n        // **********************************************************************\n        //\n        // Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.\n        //\n        // This copy of Ice is licensed to you under the terms described in the\n        // ICE_LICENSE file included in this distribution.\n        //\n        // **********************************************************************\n        //\n        // Ice version 3.7.0\n        //\n        // <auto-generated>\n        //\n        // Generated from file `IceStorm.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        \n            /**\n             * Information on the topic links.\n             *\n             **/\n            IceStorm.LinkInfo = class\n            {\n                constructor(theTopic = null, name = \"\", cost = 0)\n                {\n                    this.theTopic = theTopic;\n                    this.name = name;\n                    this.cost = cost;\n                }\n        \n                _write(ostr)\n                {\n                    IceStorm.TopicPrx.write(ostr, this.theTopic);\n                    ostr.writeString(this.name);\n                    ostr.writeInt(this.cost);\n                }\n        \n                _read(istr)\n                {\n                    this.theTopic = IceStorm.TopicPrx.read(istr, this.theTopic);\n                    this.name = istr.readString();\n                    this.cost = istr.readInt();\n                }\n        \n                static get minWireSize()\n                {\n                    return  7;\n                }\n            };\n        \n            Slice.defineStruct(IceStorm.LinkInfo, false, true);\n        \n            Slice.defineSequence(IceStorm, \"LinkInfoSeqHelper\", \"IceStorm.LinkInfo\", false);\n        \n            Slice.defineDictionary(IceStorm, \"QoS\", \"QoSHelper\", \"Ice.StringHelper\", \"Ice.StringHelper\", false, undefined, undefined);\n        \n            /**\n             * This exception indicates that an attempt was made to create a link\n             * that already exists.\n             *\n             **/\n            IceStorm.LinkExists = class extends Ice.UserException\n            {\n                constructor(name = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.name = name;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::IceStorm::LinkExists\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return IceStorm.LinkExists;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.name);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.name = istr.readString();\n                }\n            };\n        \n            /**\n             * This exception indicates that an attempt was made to remove a\n             * link that does not exist.\n             *\n             **/\n            IceStorm.NoSuchLink = class extends Ice.UserException\n            {\n                constructor(name = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.name = name;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::IceStorm::NoSuchLink\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return IceStorm.NoSuchLink;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.name);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.name = istr.readString();\n                }\n            };\n        \n            /**\n             * This exception indicates that an attempt was made to subscribe\n             * a proxy for which a subscription already exists.\n             *\n             **/\n            IceStorm.AlreadySubscribed = class extends Ice.UserException\n            {\n                constructor(_cause = \"\")\n                {\n                    super(_cause);\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::IceStorm::AlreadySubscribed\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return IceStorm.AlreadySubscribed;\n                }\n            };\n        \n            /**\n             * This exception indicates that an attempt was made to subscribe\n             * a proxy that is null.\n             *\n             **/\n            IceStorm.InvalidSubscriber = class extends Ice.UserException\n            {\n                constructor(reason = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.reason = reason;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::IceStorm::InvalidSubscriber\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return IceStorm.InvalidSubscriber;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.reason);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.reason = istr.readString();\n                }\n            };\n        \n            /**\n             * This exception indicates that a subscription failed due to an\n             * invalid QoS.\n             *\n             **/\n            IceStorm.BadQoS = class extends Ice.UserException\n            {\n                constructor(reason = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.reason = reason;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::IceStorm::BadQoS\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return IceStorm.BadQoS;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.reason);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.reason = istr.readString();\n                }\n            };\n        \n            const iceC_IceStorm_Topic_ids = [\n                \"::Ice::Object\",\n                \"::IceStorm::Topic\"\n            ];\n        \n            /**\n             * Publishers publish information on a particular topic. A topic\n             * logically represents a type.\n             *\n             * @see TopicManager\n             *\n             **/\n            IceStorm.Topic = class extends Ice.Object\n            {\n            };\n        \n            IceStorm.TopicPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(IceStorm.Topic, IceStorm.TopicPrx, iceC_IceStorm_Topic_ids, 1,\n            {\n                \"getName\": [, 2, 1, , [7], , , , , ],\n                \"getPublisher\": [, 2, 1, , [9], , , , , ],\n                \"getNonReplicatedPublisher\": [, 2, 1, , [9], , , , , ],\n                \"subscribeAndGetPublisher\": [, , , , [9], [[\"IceStorm.QoSHelper\"], [9]], ,\n                [\n                    IceStorm.AlreadySubscribed,\n                    IceStorm.BadQoS,\n                    IceStorm.InvalidSubscriber\n                ], , ],\n                \"unsubscribe\": [, 2, 2, , , [[9]], , , , ],\n                \"link\": [, , , , , [[\"IceStorm.TopicPrx\"], [3]], ,\n                [\n                    IceStorm.LinkExists\n                ], , ],\n                \"unlink\": [, , , , , [[\"IceStorm.TopicPrx\"]], ,\n                [\n                    IceStorm.NoSuchLink\n                ], , ],\n                \"getLinkInfoSeq\": [, 2, 1, , [\"IceStorm.LinkInfoSeqHelper\"], , , , , ],\n                \"getSubscribers\": [, , , , [\"Ice.IdentitySeqHelper\"], , , , , ],\n                \"destroy\": [, , , , , , , , , ]\n            });\n        \n            Slice.defineDictionary(IceStorm, \"TopicDict\", \"TopicDictHelper\", \"Ice.StringHelper\", \"IceStorm.TopicPrx\", false, undefined, undefined);\n        \n            /**\n             * This exception indicates that an attempt was made to create a topic\n             * that already exists.\n             *\n             **/\n            IceStorm.TopicExists = class extends Ice.UserException\n            {\n                constructor(name = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.name = name;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::IceStorm::TopicExists\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return IceStorm.TopicExists;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.name);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.name = istr.readString();\n                }\n            };\n        \n            /**\n             * This exception indicates that an attempt was made to retrieve a\n             * topic that does not exist.\n             *\n             **/\n            IceStorm.NoSuchTopic = class extends Ice.UserException\n            {\n                constructor(name = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.name = name;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::IceStorm::NoSuchTopic\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return IceStorm.NoSuchTopic;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.name);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.name = istr.readString();\n                }\n            };\n        \n            const iceC_IceStorm_TopicManager_ids = [\n                \"::Ice::Object\",\n                \"::IceStorm::TopicManager\"\n            ];\n        \n            /**\n             * A topic manager manages topics, and subscribers to topics.\n             *\n             * @see Topic\n             *\n             **/\n            IceStorm.TopicManager = class extends Ice.Object\n            {\n            };\n        \n            IceStorm.TopicManagerPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(IceStorm.TopicManager, IceStorm.TopicManagerPrx, iceC_IceStorm_TopicManager_ids, 1,\n            {\n                \"create\": [, , , , [\"IceStorm.TopicPrx\"], [[7]], ,\n                [\n                    IceStorm.TopicExists\n                ], , ],\n                \"retrieve\": [, 2, 1, , [\"IceStorm.TopicPrx\"], [[7]], ,\n                [\n                    IceStorm.NoSuchTopic\n                ], , ],\n                \"retrieveAll\": [, 2, 1, , [\"IceStorm.TopicDictHelper\"], , , , , ],\n                \"getSliceChecksums\": [, 2, 1, , [\"Ice.SliceChecksumDictHelper\"], , , , , ]\n            });\n        \n            const iceC_IceStorm_Finder_ids = [\n                \"::Ice::Object\",\n                \"::IceStorm::Finder\"\n            ];\n        \n            /**\n             * This inferface is advertised by the IceStorm service through the\n             * Ice object with the identity `IceStorm/Finder'. This allows clients\n             * to retrieve the topic manager with just the endpoint information of\n             * the IceStorm service.\n             *\n             **/\n            IceStorm.Finder = class extends Ice.Object\n            {\n            };\n        \n            IceStorm.FinderPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(IceStorm.Finder, IceStorm.FinderPrx, iceC_IceStorm_Finder_ids, 1,\n            {\n                \"getTopicManager\": [, , , , [\"IceStorm.TopicManagerPrx\"], , , , , ]\n            });\n        \n    }());\n\n    root.IceStorm = IceStorm;\n}());\n\n"]}