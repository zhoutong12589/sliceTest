// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Session.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function(module, require, exports)
{
/* slice2js browser-bundle-skip-end */
/* slice2js browser-bundle-skip */
    const _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    const Glacier2 = require("../Glacier2/Session").Glacier2;
    const Ice = _ModuleRegistry.require(module,
    [
        "../Ice/Object",
        "../Ice/Value",
        "../Ice/ObjectPrx",
        "../Ice/Operation",
        "../Ice/Long",
        "../Ice/HashMap",
        "../Ice/HashUtil",
        "../Ice/ArrayUtil",
        "../Ice/StreamHelpers"
    ]).Ice;

    const IceGrid = require("../IceGrid/Exception").IceGrid;
    const Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */

    const iceC_IceGrid_Session_ids = [
        "::Glacier2::Session",
        "::Ice::Object",
        "::IceGrid::Session"
    ];

    /**
     * A session object is used by IceGrid clients to allocate and
     * release objects. Client sessions are created either via the
     * {@link Registry} object or via the registry client <tt>SessionManager</tt>
     * object.
     *
     * @see Registry
     *
     **/
    IceGrid.Session = class extends Ice.Object
    {
        static get _iceImplements()
        {
            return [
                Glacier2.Session
            ];
        }
    };

    IceGrid.SessionPrx = class extends Ice.ObjectPrx
    {
        static get _implements()
        {
            return [
                Glacier2.SessionPrx];
        }
    };

    Slice.defineOperations(IceGrid.Session, IceGrid.SessionPrx, iceC_IceGrid_Session_ids, 2,
    {
        "keepAlive": [, 2, 2, , , , , , , ],
        "allocateObjectById": [, , , , [9], [[Ice.Identity]], ,
        [
            IceGrid.AllocationException,
            IceGrid.ObjectNotRegisteredException
        ], , ],
        "allocateObjectByType": [, , , , [9], [[7]], ,
        [
            IceGrid.AllocationException
        ], , ],
        "releaseObject": [, , , , , [[Ice.Identity]], ,
        [
            IceGrid.AllocationException,
            IceGrid.ObjectNotRegisteredException
        ], , ],
        "setAllocationTimeout": [, 2, 2, , , [[3]], , , , ]
    });
/* slice2js browser-bundle-skip */
    exports.IceGrid = IceGrid;
/* slice2js browser-bundle-skip-end */
/* slice2js browser-bundle-skip */
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice._require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
/* slice2js browser-bundle-skip-end */
