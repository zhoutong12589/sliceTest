var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Session.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function (module, require, exports) {
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
    var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    var Glacier2 = require("../Glacier2/SSLInfo").Glacier2;
    var Ice = _ModuleRegistry.require(module, ["../Ice/Object", "../Ice/Value", "../Ice/ObjectPrx", "../Ice/Operation", "../Ice/Exception", "../Ice/Long", "../Ice/HashMap", "../Ice/HashUtil", "../Ice/ArrayUtil", "../Ice/StreamHelpers", "../Ice/BuiltinSequences", "../Ice/Identity"]).Ice;

    var Slice = Ice.Slice;
    /* slice2js browser-bundle-skip-end */

    /**
     * This exception is raised if an attempt to create a new session failed.
     *
     **/
    Glacier2.CannotCreateSessionException = function (_Ice$UserException) {
        _inherits(_class, _Ice$UserException);

        function _class() {
            var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            _classCallCheck(this, _class);

            var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, _cause));

            _this.reason = reason;
            return _this;
        }

        _createClass(_class, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return Glacier2.CannotCreateSessionException;
            }
        }, {
            key: "_writeMemberImpl",
            value: function _writeMemberImpl(ostr) {
                ostr.writeString(this.reason);
            }
        }, {
            key: "_readMemberImpl",
            value: function _readMemberImpl(istr) {
                this.reason = istr.readString();
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::Glacier2::CannotCreateSessionException";
            }
        }]);

        return _class;
    }(Ice.UserException);

    Slice.PreservedUserException(Glacier2.CannotCreateSessionException);

    var iceC_Glacier2_Session_ids = ["::Glacier2::Session", "::Ice::Object"];

    /**
     * A client-visible session object, which is tied to the lifecycle of a {@link Router}.
     *
     * @see Router
     * @see SessionManager
     *
     **/
    Glacier2.Session = function (_Ice$Object) {
        _inherits(_class2, _Ice$Object);

        function _class2() {
            _classCallCheck(this, _class2);

            return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
        }

        return _class2;
    }(Ice.Object);

    Glacier2.SessionPrx = function (_Ice$ObjectPrx) {
        _inherits(_class3, _Ice$ObjectPrx);

        function _class3() {
            _classCallCheck(this, _class3);

            return _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).apply(this, arguments));
        }

        return _class3;
    }(Ice.ObjectPrx);

    Slice.defineOperations(Glacier2.Session, Glacier2.SessionPrx, iceC_Glacier2_Session_ids, 0, {
        "destroy": [,,,,,,,,,]
    });

    var iceC_Glacier2_StringSet_ids = ["::Glacier2::StringSet", "::Ice::Object"];

    /**
     * An object for managing the set of identity constraints for specific
     * parts of object identity on a
     * {@link Session}.
     *
     * @see Session
     * @see SessionControl
     *
     **/
    Glacier2.StringSet = function (_Ice$Object2) {
        _inherits(_class4, _Ice$Object2);

        function _class4() {
            _classCallCheck(this, _class4);

            return _possibleConstructorReturn(this, (_class4.__proto__ || Object.getPrototypeOf(_class4)).apply(this, arguments));
        }

        return _class4;
    }(Ice.Object);

    Glacier2.StringSetPrx = function (_Ice$ObjectPrx2) {
        _inherits(_class5, _Ice$ObjectPrx2);

        function _class5() {
            _classCallCheck(this, _class5);

            return _possibleConstructorReturn(this, (_class5.__proto__ || Object.getPrototypeOf(_class5)).apply(this, arguments));
        }

        return _class5;
    }(Ice.ObjectPrx);

    Slice.defineOperations(Glacier2.StringSet, Glacier2.StringSetPrx, iceC_Glacier2_StringSet_ids, 0, {
        "add": [, 2, 2,,, [["Ice.StringSeqHelper"]],,,,],
        "remove": [, 2, 2,,, [["Ice.StringSeqHelper"]],,,,],
        "get": [, 2, 2,, ["Ice.StringSeqHelper"],,,,,]
    });

    var iceC_Glacier2_IdentitySet_ids = ["::Glacier2::IdentitySet", "::Ice::Object"];

    /**
     * An object for managing the set of object identity constraints on a
     * {@link Session}.
     *
     * @see Session
     * @see SessionControl
     *
     **/
    Glacier2.IdentitySet = function (_Ice$Object3) {
        _inherits(_class6, _Ice$Object3);

        function _class6() {
            _classCallCheck(this, _class6);

            return _possibleConstructorReturn(this, (_class6.__proto__ || Object.getPrototypeOf(_class6)).apply(this, arguments));
        }

        return _class6;
    }(Ice.Object);

    Glacier2.IdentitySetPrx = function (_Ice$ObjectPrx3) {
        _inherits(_class7, _Ice$ObjectPrx3);

        function _class7() {
            _classCallCheck(this, _class7);

            return _possibleConstructorReturn(this, (_class7.__proto__ || Object.getPrototypeOf(_class7)).apply(this, arguments));
        }

        return _class7;
    }(Ice.ObjectPrx);

    Slice.defineOperations(Glacier2.IdentitySet, Glacier2.IdentitySetPrx, iceC_Glacier2_IdentitySet_ids, 0, {
        "add": [, 2, 2,,, [["Ice.IdentitySeqHelper"]],,,,],
        "remove": [, 2, 2,,, [["Ice.IdentitySeqHelper"]],,,,],
        "get": [, 2, 2,, ["Ice.IdentitySeqHelper"],,,,,]
    });

    var iceC_Glacier2_SessionControl_ids = ["::Glacier2::SessionControl", "::Ice::Object"];

    /**
     * An administrative session control object, which is tied to the
     * lifecycle of a {@link Session}.
     *
     * @see Session
     *
     **/
    Glacier2.SessionControl = function (_Ice$Object4) {
        _inherits(_class8, _Ice$Object4);

        function _class8() {
            _classCallCheck(this, _class8);

            return _possibleConstructorReturn(this, (_class8.__proto__ || Object.getPrototypeOf(_class8)).apply(this, arguments));
        }

        return _class8;
    }(Ice.Object);

    Glacier2.SessionControlPrx = function (_Ice$ObjectPrx4) {
        _inherits(_class9, _Ice$ObjectPrx4);

        function _class9() {
            _classCallCheck(this, _class9);

            return _possibleConstructorReturn(this, (_class9.__proto__ || Object.getPrototypeOf(_class9)).apply(this, arguments));
        }

        return _class9;
    }(Ice.ObjectPrx);

    Slice.defineOperations(Glacier2.SessionControl, Glacier2.SessionControlPrx, iceC_Glacier2_SessionControl_ids, 0, {
        "categories": [,,,, ["Glacier2.StringSetPrx"],,,,,],
        "adapterIds": [,,,, ["Glacier2.StringSetPrx"],,,,,],
        "identities": [,,,, ["Glacier2.IdentitySetPrx"],,,,,],
        "getSessionTimeout": [, 2, 2,, [3],,,,,],
        "destroy": [,,,,,,,,,]
    });

    var iceC_Glacier2_SessionManager_ids = ["::Glacier2::SessionManager", "::Ice::Object"];

    /**
     * The session manager for username/password authenticated users that
     * is responsible for managing {@link Session} objects. New session objects
     * are created by the {@link Router} object calling on an application-provided
     * session manager. If no session manager is provided by the application,
     * no client-visible sessions are passed to the client.
     *
     * @see Router
     * @see Session
     *
     **/
    Glacier2.SessionManager = function (_Ice$Object5) {
        _inherits(_class10, _Ice$Object5);

        function _class10() {
            _classCallCheck(this, _class10);

            return _possibleConstructorReturn(this, (_class10.__proto__ || Object.getPrototypeOf(_class10)).apply(this, arguments));
        }

        return _class10;
    }(Ice.Object);

    Glacier2.SessionManagerPrx = function (_Ice$ObjectPrx5) {
        _inherits(_class11, _Ice$ObjectPrx5);

        function _class11() {
            _classCallCheck(this, _class11);

            return _possibleConstructorReturn(this, (_class11.__proto__ || Object.getPrototypeOf(_class11)).apply(this, arguments));
        }

        return _class11;
    }(Ice.ObjectPrx);

    Slice.defineOperations(Glacier2.SessionManager, Glacier2.SessionManagerPrx, iceC_Glacier2_SessionManager_ids, 0, {
        "create": [,,, 2, ["Glacier2.SessionPrx"], [[7], ["Glacier2.SessionControlPrx"]],, [Glacier2.CannotCreateSessionException],,]
    });

    var iceC_Glacier2_SSLSessionManager_ids = ["::Glacier2::SSLSessionManager", "::Ice::Object"];

    /**
     * The session manager for SSL authenticated users that is
     * responsible for managing {@link Session} objects. New session objects are
     * created by the {@link Router} object calling on an application-provided
     * session manager. If no session manager is provided by the
     * application, no client-visible sessions are passed to the client.
     *
     * @see Router
     * @see Session
     *
     **/
    Glacier2.SSLSessionManager = function (_Ice$Object6) {
        _inherits(_class12, _Ice$Object6);

        function _class12() {
            _classCallCheck(this, _class12);

            return _possibleConstructorReturn(this, (_class12.__proto__ || Object.getPrototypeOf(_class12)).apply(this, arguments));
        }

        return _class12;
    }(Ice.Object);

    Glacier2.SSLSessionManagerPrx = function (_Ice$ObjectPrx6) {
        _inherits(_class13, _Ice$ObjectPrx6);

        function _class13() {
            _classCallCheck(this, _class13);

            return _possibleConstructorReturn(this, (_class13.__proto__ || Object.getPrototypeOf(_class13)).apply(this, arguments));
        }

        return _class13;
    }(Ice.ObjectPrx);

    Slice.defineOperations(Glacier2.SSLSessionManager, Glacier2.SSLSessionManagerPrx, iceC_Glacier2_SSLSessionManager_ids, 0, {
        "create": [,,, 2, ["Glacier2.SessionPrx"], [[Glacier2.SSLInfo], ["Glacier2.SessionControlPrx"]],, [Glacier2.CannotCreateSessionException],,]
    });
    /* slice2js browser-bundle-skip */
    exports.Glacier2 = Glacier2;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
})(typeof global !== "undefined" && typeof global.process !== "undefined" ? module : undefined, typeof global !== "undefined" && typeof global.process !== "undefined" ? require : this.Ice._require, typeof global !== "undefined" && typeof global.process !== "undefined" ? exports : this);
/* slice2js browser-bundle-skip-end */