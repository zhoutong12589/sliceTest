var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `SSLInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function (module, require, exports) {
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
    var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    var Ice = _ModuleRegistry.require(module, ["../Ice/Struct", "../Ice/Long", "../Ice/HashMap", "../Ice/HashUtil", "../Ice/ArrayUtil", "../Ice/StreamHelpers", "../Ice/BuiltinSequences"]).Ice;

    var Slice = Ice.Slice;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */

    var Glacier2 = _ModuleRegistry.module("Glacier2");
    /* slice2js browser-bundle-skip-end */

    /**
     * Information taken from an SSL connection used for permissions
     * verification.
     *
     * @see PermissionsVerifier
     *
     **/
    Glacier2.SSLInfo = function () {
        function _class() {
            var remoteHost = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
            var remotePort = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var localHost = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
            var localPort = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
            var cipher = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "";
            var certs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;

            _classCallCheck(this, _class);

            this.remoteHost = remoteHost;
            this.remotePort = remotePort;
            this.localHost = localHost;
            this.localPort = localPort;
            this.cipher = cipher;
            this.certs = certs;
        }

        _createClass(_class, [{
            key: "_write",
            value: function _write(ostr) {
                ostr.writeString(this.remoteHost);
                ostr.writeInt(this.remotePort);
                ostr.writeString(this.localHost);
                ostr.writeInt(this.localPort);
                ostr.writeString(this.cipher);
                Ice.StringSeqHelper.write(ostr, this.certs);
            }
        }, {
            key: "_read",
            value: function _read(istr) {
                this.remoteHost = istr.readString();
                this.remotePort = istr.readInt();
                this.localHost = istr.readString();
                this.localPort = istr.readInt();
                this.cipher = istr.readString();
                this.certs = Ice.StringSeqHelper.read(istr);
            }
        }], [{
            key: "minWireSize",
            get: function get() {
                return 12;
            }
        }]);

        return _class;
    }();

    Slice.defineStruct(Glacier2.SSLInfo, true, true);
    /* slice2js browser-bundle-skip */
    exports.Glacier2 = Glacier2;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
})(typeof global !== "undefined" && typeof global.process !== "undefined" ? module : undefined, typeof global !== "undefined" && typeof global.process !== "undefined" ? require : this.Ice._require, typeof global !== "undefined" && typeof global.process !== "undefined" ? exports : this);
/* slice2js browser-bundle-skip-end */