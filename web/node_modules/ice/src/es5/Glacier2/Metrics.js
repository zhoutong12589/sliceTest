var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function (module, require, exports) {
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
    var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    var Ice = _ModuleRegistry.require(module, ["../Ice/Object", "../Ice/Value", "../Ice/ObjectPrx", "../Ice/Long", "../Ice/HashMap", "../Ice/HashUtil", "../Ice/ArrayUtil", "../Ice/StreamHelpers"]).Ice;

    var IceMX = require("../Ice/Metrics").IceMX;
    var Slice = Ice.Slice;
    /* slice2js browser-bundle-skip-end */

    var iceC_IceMX_SessionMetrics_ids = ["::Ice::Object", "::IceMX::Metrics", "::IceMX::SessionMetrics"];

    /**
     * Provides information on Glacier2 sessions.
     *
     **/
    IceMX.SessionMetrics = function (_IceMX$Metrics) {
        _inherits(_class, _IceMX$Metrics);

        function _class(id, total, current, totalLifetime, failures) {
            var forwardedClient = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
            var forwardedServer = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
            var routingTableSize = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;
            var queuedClient = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;
            var queuedServer = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;
            var overriddenClient = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;
            var overriddenServer = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 0;

            _classCallCheck(this, _class);

            var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, id, total, current, totalLifetime, failures));

            _this.forwardedClient = forwardedClient;
            _this.forwardedServer = forwardedServer;
            _this.routingTableSize = routingTableSize;
            _this.queuedClient = queuedClient;
            _this.queuedServer = queuedServer;
            _this.overriddenClient = overriddenClient;
            _this.overriddenServer = overriddenServer;
            return _this;
        }

        _createClass(_class, [{
            key: "_iceWriteMemberImpl",
            value: function _iceWriteMemberImpl(ostr) {
                ostr.writeInt(this.forwardedClient);
                ostr.writeInt(this.forwardedServer);
                ostr.writeInt(this.routingTableSize);
                ostr.writeInt(this.queuedClient);
                ostr.writeInt(this.queuedServer);
                ostr.writeInt(this.overriddenClient);
                ostr.writeInt(this.overriddenServer);
            }
        }, {
            key: "_iceReadMemberImpl",
            value: function _iceReadMemberImpl(istr) {
                this.forwardedClient = istr.readInt();
                this.forwardedServer = istr.readInt();
                this.routingTableSize = istr.readInt();
                this.queuedClient = istr.readInt();
                this.queuedServer = istr.readInt();
                this.overriddenClient = istr.readInt();
                this.overriddenServer = istr.readInt();
            }
        }]);

        return _class;
    }(IceMX.Metrics);

    Slice.defineValue(IceMX.SessionMetrics, iceC_IceMX_SessionMetrics_ids[2], false);

    /**
     * Provides information on Glacier2 sessions.
     *
     **/
    IceMX.SessionMetricsDisp = function (_IceMX$MetricsDisp) {
        _inherits(_class2, _IceMX$MetricsDisp);

        function _class2() {
            _classCallCheck(this, _class2);

            return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
        }

        return _class2;
    }(IceMX.MetricsDisp);

    Slice.defineOperations(IceMX.SessionMetricsDisp, undefined, iceC_IceMX_SessionMetrics_ids, 2);
    /* slice2js browser-bundle-skip */
    exports.IceMX = IceMX;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
})(typeof global !== "undefined" && typeof global.process !== "undefined" ? module : undefined, typeof global !== "undefined" && typeof global.process !== "undefined" ? require : this.Ice._require, typeof global !== "undefined" && typeof global.process !== "undefined" ? exports : this);
/* slice2js browser-bundle-skip-end */