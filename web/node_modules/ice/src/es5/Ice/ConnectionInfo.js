function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `ConnectionInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function (module, require, exports) {
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
    var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    var Ice = _ModuleRegistry.require(module, ["../Ice/Object", "../Ice/Value", "../Ice/ObjectPrx", "../Ice/Long", "../Ice/HashMap", "../Ice/HashUtil", "../Ice/ArrayUtil", "../Ice/StreamHelpers", "../Ice/Connection"]).Ice;

    var Slice = Ice.Slice;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */

    var IceSSL = _ModuleRegistry.module("IceSSL");
    /* slice2js browser-bundle-skip-end */

    /**
     * Provides access to the connection details of an SSL connection
     *
     **/
    IceSSL.ConnectionInfo = function (_Ice$ConnectionInfo) {
        _inherits(_class, _Ice$ConnectionInfo);

        function _class(underlying, incoming, adapterName, connectionId) {
            var cipher = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "";
            var certs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;
            var verified = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;

            _classCallCheck(this, _class);

            var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, underlying, incoming, adapterName, connectionId));

            _this.cipher = cipher;
            _this.certs = certs;
            _this.verified = verified;
            return _this;
        }

        return _class;
    }(Ice.ConnectionInfo);

    /* slice2js browser-bundle-skip */
    exports.IceSSL = IceSSL;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
})(typeof global !== "undefined" && typeof global.process !== "undefined" ? module : undefined, typeof global !== "undefined" && typeof global.process !== "undefined" ? require : this.Ice._require, typeof global !== "undefined" && typeof global.process !== "undefined" ? exports : this);
/* slice2js browser-bundle-skip-end */