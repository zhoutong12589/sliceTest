var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `IceStorm.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function (module, require, exports) {
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
    var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    var Ice = _ModuleRegistry.require(module, ["../Ice/Object", "../Ice/Value", "../Ice/ObjectPrx", "../Ice/Operation", "../Ice/Struct", "../Ice/Exception", "../Ice/Long", "../Ice/HashMap", "../Ice/HashUtil", "../Ice/ArrayUtil", "../Ice/StreamHelpers", "../Ice/Identity", "../Ice/SliceChecksumDict"]).Ice;

    var IceMX = require("../IceStorm/Metrics").IceMX;
    var Slice = Ice.Slice;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */

    var IceStorm = _ModuleRegistry.module("IceStorm");
    /* slice2js browser-bundle-skip-end */

    /**
     * Information on the topic links.
     *
     **/
    IceStorm.LinkInfo = function () {
        function _class() {
            var theTopic = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
            var cost = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

            _classCallCheck(this, _class);

            this.theTopic = theTopic;
            this.name = name;
            this.cost = cost;
        }

        _createClass(_class, [{
            key: "_write",
            value: function _write(ostr) {
                IceStorm.TopicPrx.write(ostr, this.theTopic);
                ostr.writeString(this.name);
                ostr.writeInt(this.cost);
            }
        }, {
            key: "_read",
            value: function _read(istr) {
                this.theTopic = IceStorm.TopicPrx.read(istr, this.theTopic);
                this.name = istr.readString();
                this.cost = istr.readInt();
            }
        }], [{
            key: "minWireSize",
            get: function get() {
                return 7;
            }
        }]);

        return _class;
    }();

    Slice.defineStruct(IceStorm.LinkInfo, false, true);

    Slice.defineSequence(IceStorm, "LinkInfoSeqHelper", "IceStorm.LinkInfo", false);

    Slice.defineDictionary(IceStorm, "QoS", "QoSHelper", "Ice.StringHelper", "Ice.StringHelper", false, undefined, undefined);

    /**
     * This exception indicates that an attempt was made to create a link
     * that already exists.
     *
     **/
    IceStorm.LinkExists = function (_Ice$UserException) {
        _inherits(_class2, _Ice$UserException);

        function _class2() {
            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            _classCallCheck(this, _class2);

            var _this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _cause));

            _this.name = name;
            return _this;
        }

        _createClass(_class2, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return IceStorm.LinkExists;
            }
        }, {
            key: "_writeMemberImpl",
            value: function _writeMemberImpl(ostr) {
                ostr.writeString(this.name);
            }
        }, {
            key: "_readMemberImpl",
            value: function _readMemberImpl(istr) {
                this.name = istr.readString();
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::IceStorm::LinkExists";
            }
        }]);

        return _class2;
    }(Ice.UserException);

    /**
     * This exception indicates that an attempt was made to remove a
     * link that does not exist.
     *
     **/
    IceStorm.NoSuchLink = function (_Ice$UserException2) {
        _inherits(_class3, _Ice$UserException2);

        function _class3() {
            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            _classCallCheck(this, _class3);

            var _this2 = _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).call(this, _cause));

            _this2.name = name;
            return _this2;
        }

        _createClass(_class3, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return IceStorm.NoSuchLink;
            }
        }, {
            key: "_writeMemberImpl",
            value: function _writeMemberImpl(ostr) {
                ostr.writeString(this.name);
            }
        }, {
            key: "_readMemberImpl",
            value: function _readMemberImpl(istr) {
                this.name = istr.readString();
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::IceStorm::NoSuchLink";
            }
        }]);

        return _class3;
    }(Ice.UserException);

    /**
     * This exception indicates that an attempt was made to subscribe
     * a proxy for which a subscription already exists.
     *
     **/
    IceStorm.AlreadySubscribed = function (_Ice$UserException3) {
        _inherits(_class4, _Ice$UserException3);

        function _class4() {
            var _cause = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            _classCallCheck(this, _class4);

            return _possibleConstructorReturn(this, (_class4.__proto__ || Object.getPrototypeOf(_class4)).call(this, _cause));
        }

        _createClass(_class4, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return IceStorm.AlreadySubscribed;
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::IceStorm::AlreadySubscribed";
            }
        }]);

        return _class4;
    }(Ice.UserException);

    /**
     * This exception indicates that an attempt was made to subscribe
     * a proxy that is null.
     *
     **/
    IceStorm.InvalidSubscriber = function (_Ice$UserException4) {
        _inherits(_class5, _Ice$UserException4);

        function _class5() {
            var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            _classCallCheck(this, _class5);

            var _this4 = _possibleConstructorReturn(this, (_class5.__proto__ || Object.getPrototypeOf(_class5)).call(this, _cause));

            _this4.reason = reason;
            return _this4;
        }

        _createClass(_class5, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return IceStorm.InvalidSubscriber;
            }
        }, {
            key: "_writeMemberImpl",
            value: function _writeMemberImpl(ostr) {
                ostr.writeString(this.reason);
            }
        }, {
            key: "_readMemberImpl",
            value: function _readMemberImpl(istr) {
                this.reason = istr.readString();
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::IceStorm::InvalidSubscriber";
            }
        }]);

        return _class5;
    }(Ice.UserException);

    /**
     * This exception indicates that a subscription failed due to an
     * invalid QoS.
     *
     **/
    IceStorm.BadQoS = function (_Ice$UserException5) {
        _inherits(_class6, _Ice$UserException5);

        function _class6() {
            var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            _classCallCheck(this, _class6);

            var _this5 = _possibleConstructorReturn(this, (_class6.__proto__ || Object.getPrototypeOf(_class6)).call(this, _cause));

            _this5.reason = reason;
            return _this5;
        }

        _createClass(_class6, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return IceStorm.BadQoS;
            }
        }, {
            key: "_writeMemberImpl",
            value: function _writeMemberImpl(ostr) {
                ostr.writeString(this.reason);
            }
        }, {
            key: "_readMemberImpl",
            value: function _readMemberImpl(istr) {
                this.reason = istr.readString();
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::IceStorm::BadQoS";
            }
        }]);

        return _class6;
    }(Ice.UserException);

    var iceC_IceStorm_Topic_ids = ["::Ice::Object", "::IceStorm::Topic"];

    /**
     * Publishers publish information on a particular topic. A topic
     * logically represents a type.
     *
     * @see TopicManager
     *
     **/
    IceStorm.Topic = function (_Ice$Object) {
        _inherits(_class7, _Ice$Object);

        function _class7() {
            _classCallCheck(this, _class7);

            return _possibleConstructorReturn(this, (_class7.__proto__ || Object.getPrototypeOf(_class7)).apply(this, arguments));
        }

        return _class7;
    }(Ice.Object);

    IceStorm.TopicPrx = function (_Ice$ObjectPrx) {
        _inherits(_class8, _Ice$ObjectPrx);

        function _class8() {
            _classCallCheck(this, _class8);

            return _possibleConstructorReturn(this, (_class8.__proto__ || Object.getPrototypeOf(_class8)).apply(this, arguments));
        }

        return _class8;
    }(Ice.ObjectPrx);

    Slice.defineOperations(IceStorm.Topic, IceStorm.TopicPrx, iceC_IceStorm_Topic_ids, 1, {
        "getName": [, 2, 1,, [7],,,,,],
        "getPublisher": [, 2, 1,, [9],,,,,],
        "getNonReplicatedPublisher": [, 2, 1,, [9],,,,,],
        "subscribeAndGetPublisher": [,,,, [9], [["IceStorm.QoSHelper"], [9]],, [IceStorm.AlreadySubscribed, IceStorm.BadQoS, IceStorm.InvalidSubscriber],,],
        "unsubscribe": [, 2, 2,,, [[9]],,,,],
        "link": [,,,,, [["IceStorm.TopicPrx"], [3]],, [IceStorm.LinkExists],,],
        "unlink": [,,,,, [["IceStorm.TopicPrx"]],, [IceStorm.NoSuchLink],,],
        "getLinkInfoSeq": [, 2, 1,, ["IceStorm.LinkInfoSeqHelper"],,,,,],
        "getSubscribers": [,,,, ["Ice.IdentitySeqHelper"],,,,,],
        "destroy": [,,,,,,,,,]
    });

    Slice.defineDictionary(IceStorm, "TopicDict", "TopicDictHelper", "Ice.StringHelper", "IceStorm.TopicPrx", false, undefined, undefined);

    /**
     * This exception indicates that an attempt was made to create a topic
     * that already exists.
     *
     **/
    IceStorm.TopicExists = function (_Ice$UserException6) {
        _inherits(_class9, _Ice$UserException6);

        function _class9() {
            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            _classCallCheck(this, _class9);

            var _this8 = _possibleConstructorReturn(this, (_class9.__proto__ || Object.getPrototypeOf(_class9)).call(this, _cause));

            _this8.name = name;
            return _this8;
        }

        _createClass(_class9, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return IceStorm.TopicExists;
            }
        }, {
            key: "_writeMemberImpl",
            value: function _writeMemberImpl(ostr) {
                ostr.writeString(this.name);
            }
        }, {
            key: "_readMemberImpl",
            value: function _readMemberImpl(istr) {
                this.name = istr.readString();
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::IceStorm::TopicExists";
            }
        }]);

        return _class9;
    }(Ice.UserException);

    /**
     * This exception indicates that an attempt was made to retrieve a
     * topic that does not exist.
     *
     **/
    IceStorm.NoSuchTopic = function (_Ice$UserException7) {
        _inherits(_class10, _Ice$UserException7);

        function _class10() {
            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            _classCallCheck(this, _class10);

            var _this9 = _possibleConstructorReturn(this, (_class10.__proto__ || Object.getPrototypeOf(_class10)).call(this, _cause));

            _this9.name = name;
            return _this9;
        }

        _createClass(_class10, [{
            key: "_mostDerivedType",
            value: function _mostDerivedType() {
                return IceStorm.NoSuchTopic;
            }
        }, {
            key: "_writeMemberImpl",
            value: function _writeMemberImpl(ostr) {
                ostr.writeString(this.name);
            }
        }, {
            key: "_readMemberImpl",
            value: function _readMemberImpl(istr) {
                this.name = istr.readString();
            }
        }], [{
            key: "_parent",
            get: function get() {
                return Ice.UserException;
            }
        }, {
            key: "_id",
            get: function get() {
                return "::IceStorm::NoSuchTopic";
            }
        }]);

        return _class10;
    }(Ice.UserException);

    var iceC_IceStorm_TopicManager_ids = ["::Ice::Object", "::IceStorm::TopicManager"];

    /**
     * A topic manager manages topics, and subscribers to topics.
     *
     * @see Topic
     *
     **/
    IceStorm.TopicManager = function (_Ice$Object2) {
        _inherits(_class11, _Ice$Object2);

        function _class11() {
            _classCallCheck(this, _class11);

            return _possibleConstructorReturn(this, (_class11.__proto__ || Object.getPrototypeOf(_class11)).apply(this, arguments));
        }

        return _class11;
    }(Ice.Object);

    IceStorm.TopicManagerPrx = function (_Ice$ObjectPrx2) {
        _inherits(_class12, _Ice$ObjectPrx2);

        function _class12() {
            _classCallCheck(this, _class12);

            return _possibleConstructorReturn(this, (_class12.__proto__ || Object.getPrototypeOf(_class12)).apply(this, arguments));
        }

        return _class12;
    }(Ice.ObjectPrx);

    Slice.defineOperations(IceStorm.TopicManager, IceStorm.TopicManagerPrx, iceC_IceStorm_TopicManager_ids, 1, {
        "create": [,,,, ["IceStorm.TopicPrx"], [[7]],, [IceStorm.TopicExists],,],
        "retrieve": [, 2, 1,, ["IceStorm.TopicPrx"], [[7]],, [IceStorm.NoSuchTopic],,],
        "retrieveAll": [, 2, 1,, ["IceStorm.TopicDictHelper"],,,,,],
        "getSliceChecksums": [, 2, 1,, ["Ice.SliceChecksumDictHelper"],,,,,]
    });

    var iceC_IceStorm_Finder_ids = ["::Ice::Object", "::IceStorm::Finder"];

    /**
     * This inferface is advertised by the IceStorm service through the
     * Ice object with the identity `IceStorm/Finder'. This allows clients
     * to retrieve the topic manager with just the endpoint information of
     * the IceStorm service.
     *
     **/
    IceStorm.Finder = function (_Ice$Object3) {
        _inherits(_class13, _Ice$Object3);

        function _class13() {
            _classCallCheck(this, _class13);

            return _possibleConstructorReturn(this, (_class13.__proto__ || Object.getPrototypeOf(_class13)).apply(this, arguments));
        }

        return _class13;
    }(Ice.Object);

    IceStorm.FinderPrx = function (_Ice$ObjectPrx3) {
        _inherits(_class14, _Ice$ObjectPrx3);

        function _class14() {
            _classCallCheck(this, _class14);

            return _possibleConstructorReturn(this, (_class14.__proto__ || Object.getPrototypeOf(_class14)).apply(this, arguments));
        }

        return _class14;
    }(Ice.ObjectPrx);

    Slice.defineOperations(IceStorm.Finder, IceStorm.FinderPrx, iceC_IceStorm_Finder_ids, 1, {
        "getTopicManager": [,,,, ["IceStorm.TopicManagerPrx"],,,,,]
    });
    /* slice2js browser-bundle-skip */
    exports.IceStorm = IceStorm;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
})(typeof global !== "undefined" && typeof global.process !== "undefined" ? module : undefined, typeof global !== "undefined" && typeof global.process !== "undefined" ? require : this.Ice._require, typeof global !== "undefined" && typeof global.process !== "undefined" ? exports : this);
/* slice2js browser-bundle-skip-end */