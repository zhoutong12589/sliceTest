var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function (module, require, exports) {
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
    var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    var Ice = _ModuleRegistry.require(module, ["../Ice/Object", "../Ice/Value", "../Ice/ObjectPrx", "../Ice/Long", "../Ice/HashMap", "../Ice/HashUtil", "../Ice/ArrayUtil", "../Ice/StreamHelpers"]).Ice;

    var IceMX = require("../Ice/Metrics").IceMX;
    var Slice = Ice.Slice;
    /* slice2js browser-bundle-skip-end */

    var iceC_IceMX_TopicMetrics_ids = ["::Ice::Object", "::IceMX::Metrics", "::IceMX::TopicMetrics"];

    /**
     * Provides information on IceStorm topics.
     *
     **/
    IceMX.TopicMetrics = function (_IceMX$Metrics) {
        _inherits(_class, _IceMX$Metrics);

        function _class(id, total, current, totalLifetime, failures) {
            var published = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Ice.Long(0, 0);
            var forwarded = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new Ice.Long(0, 0);

            _classCallCheck(this, _class);

            var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, id, total, current, totalLifetime, failures));

            _this.published = published;
            _this.forwarded = forwarded;
            return _this;
        }

        _createClass(_class, [{
            key: "_iceWriteMemberImpl",
            value: function _iceWriteMemberImpl(ostr) {
                ostr.writeLong(this.published);
                ostr.writeLong(this.forwarded);
            }
        }, {
            key: "_iceReadMemberImpl",
            value: function _iceReadMemberImpl(istr) {
                this.published = istr.readLong();
                this.forwarded = istr.readLong();
            }
        }]);

        return _class;
    }(IceMX.Metrics);

    Slice.defineValue(IceMX.TopicMetrics, iceC_IceMX_TopicMetrics_ids[2], false);

    /**
     * Provides information on IceStorm topics.
     *
     **/
    IceMX.TopicMetricsDisp = function (_IceMX$MetricsDisp) {
        _inherits(_class2, _IceMX$MetricsDisp);

        function _class2() {
            _classCallCheck(this, _class2);

            return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
        }

        return _class2;
    }(IceMX.MetricsDisp);

    Slice.defineOperations(IceMX.TopicMetricsDisp, undefined, iceC_IceMX_TopicMetrics_ids, 2);

    var iceC_IceMX_SubscriberMetrics_ids = ["::Ice::Object", "::IceMX::Metrics", "::IceMX::SubscriberMetrics"];

    /**
     * Provides information on IceStorm subscribers.
     *
     **/
    IceMX.SubscriberMetrics = function (_IceMX$Metrics2) {
        _inherits(_class3, _IceMX$Metrics2);

        function _class3(id, total, current, totalLifetime, failures) {
            var queued = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
            var outstanding = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
            var delivered = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : new Ice.Long(0, 0);

            _classCallCheck(this, _class3);

            var _this3 = _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).call(this, id, total, current, totalLifetime, failures));

            _this3.queued = queued;
            _this3.outstanding = outstanding;
            _this3.delivered = delivered;
            return _this3;
        }

        _createClass(_class3, [{
            key: "_iceWriteMemberImpl",
            value: function _iceWriteMemberImpl(ostr) {
                ostr.writeInt(this.queued);
                ostr.writeInt(this.outstanding);
                ostr.writeLong(this.delivered);
            }
        }, {
            key: "_iceReadMemberImpl",
            value: function _iceReadMemberImpl(istr) {
                this.queued = istr.readInt();
                this.outstanding = istr.readInt();
                this.delivered = istr.readLong();
            }
        }]);

        return _class3;
    }(IceMX.Metrics);

    Slice.defineValue(IceMX.SubscriberMetrics, iceC_IceMX_SubscriberMetrics_ids[2], false);

    /**
     * Provides information on IceStorm subscribers.
     *
     **/
    IceMX.SubscriberMetricsDisp = function (_IceMX$MetricsDisp2) {
        _inherits(_class4, _IceMX$MetricsDisp2);

        function _class4() {
            _classCallCheck(this, _class4);

            return _possibleConstructorReturn(this, (_class4.__proto__ || Object.getPrototypeOf(_class4)).apply(this, arguments));
        }

        return _class4;
    }(IceMX.MetricsDisp);

    Slice.defineOperations(IceMX.SubscriberMetricsDisp, undefined, iceC_IceMX_SubscriberMetrics_ids, 2);
    /* slice2js browser-bundle-skip */
    exports.IceMX = IceMX;
    /* slice2js browser-bundle-skip-end */
    /* slice2js browser-bundle-skip */
})(typeof global !== "undefined" && typeof global.process !== "undefined" ? module : undefined, typeof global !== "undefined" && typeof global.process !== "undefined" ? require : this.Ice._require, typeof global !== "undefined" && typeof global.process !== "undefined" ? exports : this);
/* slice2js browser-bundle-skip-end */