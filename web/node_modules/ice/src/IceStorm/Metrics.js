// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function(module, require, exports)
{
/* slice2js browser-bundle-skip-end */
/* slice2js browser-bundle-skip */
    const _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
    const Ice = _ModuleRegistry.require(module,
    [
        "../Ice/Object",
        "../Ice/Value",
        "../Ice/ObjectPrx",
        "../Ice/Long",
        "../Ice/HashMap",
        "../Ice/HashUtil",
        "../Ice/ArrayUtil",
        "../Ice/StreamHelpers"
    ]).Ice;

    const IceMX = require("../Ice/Metrics").IceMX;
    const Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */

    const iceC_IceMX_TopicMetrics_ids = [
        "::Ice::Object",
        "::IceMX::Metrics",
        "::IceMX::TopicMetrics"
    ];

    /**
     * Provides information on IceStorm topics.
     *
     **/
    IceMX.TopicMetrics = class extends IceMX.Metrics
    {
        constructor(id, total, current, totalLifetime, failures, published = new Ice.Long(0, 0), forwarded = new Ice.Long(0, 0))
        {
            super(id, total, current, totalLifetime, failures);
            this.published = published;
            this.forwarded = forwarded;
        }

        _iceWriteMemberImpl(ostr)
        {
            ostr.writeLong(this.published);
            ostr.writeLong(this.forwarded);
        }

        _iceReadMemberImpl(istr)
        {
            this.published = istr.readLong();
            this.forwarded = istr.readLong();
        }
    };

    Slice.defineValue(IceMX.TopicMetrics, iceC_IceMX_TopicMetrics_ids[2], false);

    /**
     * Provides information on IceStorm topics.
     *
     **/
    IceMX.TopicMetricsDisp = class extends IceMX.MetricsDisp
    {
    };

    Slice.defineOperations(IceMX.TopicMetricsDisp, undefined, iceC_IceMX_TopicMetrics_ids, 2);

    const iceC_IceMX_SubscriberMetrics_ids = [
        "::Ice::Object",
        "::IceMX::Metrics",
        "::IceMX::SubscriberMetrics"
    ];

    /**
     * Provides information on IceStorm subscribers.
     *
     **/
    IceMX.SubscriberMetrics = class extends IceMX.Metrics
    {
        constructor(id, total, current, totalLifetime, failures, queued = 0, outstanding = 0, delivered = new Ice.Long(0, 0))
        {
            super(id, total, current, totalLifetime, failures);
            this.queued = queued;
            this.outstanding = outstanding;
            this.delivered = delivered;
        }

        _iceWriteMemberImpl(ostr)
        {
            ostr.writeInt(this.queued);
            ostr.writeInt(this.outstanding);
            ostr.writeLong(this.delivered);
        }

        _iceReadMemberImpl(istr)
        {
            this.queued = istr.readInt();
            this.outstanding = istr.readInt();
            this.delivered = istr.readLong();
        }
    };

    Slice.defineValue(IceMX.SubscriberMetrics, iceC_IceMX_SubscriberMetrics_ids[2], false);

    /**
     * Provides information on IceStorm subscribers.
     *
     **/
    IceMX.SubscriberMetricsDisp = class extends IceMX.MetricsDisp
    {
    };

    Slice.defineOperations(IceMX.SubscriberMetricsDisp, undefined, iceC_IceMX_SubscriberMetrics_ids, 2);
/* slice2js browser-bundle-skip */
    exports.IceMX = IceMX;
/* slice2js browser-bundle-skip-end */
/* slice2js browser-bundle-skip */
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice._require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
/* slice2js browser-bundle-skip-end */
